// @use '~/styles/element/index.scss' as *;

html,
body,
#app {
  position: relative;
  margin: 0;
  padding: 0;

  top: 0;
  left: 0;

  width: 100%;
  height: 100%;

  overflow: hidden;
}

#app:has(div.coloring) {
  top: 1px;
  left: 1px;

  width: calc(100% - 4px);
  height: calc(100% - 4px);

  border: 1px solid var(--el-border-color);
  border-radius: 8px;
  transition: border 0.25s;

  &:hover {
    border: 1px solid var(--el-color-primary);
  }
}

body.core-box #app {
  top: 0;
  left: 0;

  width: 100%;
  height: 100%;

  border: none !important;
}

._disabled {
  opacity: .75;
  pointer-events: none;
  cursor: not-allowed;
}

.el-scrollbar__bar {

  &.is-vertical,
  &.is-horizontal {
    width: 3px !important;
  }
}

.touch-blur .fake-background {
  &:before {
    opacity: var(--fake-opacity, 0.75) !important;
  }
}

.fake-background.index-fix {
  z-index: var(--fake-fix-index, 0);
}

.fake-background {
  &:before {
    z-index: var(--fake-index, -1);
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: var(--fake-inner-opacity, 1);
    background: var(--fake-color, var(--el-fill-color-lighter));
    border-radius: var(--fake-radius, inherit);
  }

  position: relative; // make sure background adapt to parent

  border-radius: 12px;
}

.color-template {
  --fake-inner-opacity: 0.5;
  --fake-color: var(--el-fill-color);
  border-color: var(--el-border-color);
}

span.tag {
  padding: 2px 4px;

  text-align: center;

  border-radius: 4px;
  background-color: var(--el-fill-color);
}

.Blur-Container {
  &.display {
    opacity: 1;
    pointer-events: unset;
  }

  z-index: 100000;
  position: absolute;

  top: 0;
  left: 0;

  width: 100%;
  height: 100%;

  //opacity: 0.5;
  //pointer-events: none;
  transition: 0.25s;
  border-radius: 4px 0 0 0;
  --fake-radius: 4px 0 0 0;

  // --fake-opacity: 0.75;
  //backdrop-filter: blur(18px) saturate(180%) brightness(1.8);
}

html.coloring .Blur-Container {
  top: 2px;

  height: calc(100% - 4px);
  width: 100%;
}

html.fullscreen .Blur-Container {
  top: 0;
  left: 0;

  width: 100%;
  height: 100%;
}

.el-skeleton {
  opacity: 0.5;
  --el-skeleton-color: var(--el-fill-color-lighter) !important;
}

.cubic-transition,
.transition-cubic {
  transition: 0.25s cubic-bezier(0.785, 0.135, 0.15, 0.86);
}

:root {
  --app-color: #40a6f1;
}

/*base code*/
.animated {
  -webkit-animation-duration: 0.5s;
  animation-duration: 0.5s;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

.animated.infinite {
  -webkit-animation-iteration-count: infinite;
  animation-iteration-count: infinite;
}

.animated.hinge {
  -webkit-animation-duration: 2s;
  animation-duration: 2s;
}

/*the animation definition*/
@-webkit-keyframes zoomInUp {
  0% {
    opacity: 0;
    -webkit-transform: scale3d(0.1, 0.1, 0.1) translate3d(0, 1000px, 0);
    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, 1000px, 0);
    -webkit-animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }

  60% {
    opacity: 1;
    -webkit-transform: scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0);
    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0);
    -webkit-animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
  }
}

@keyframes zoomInUp {
  0% {
    opacity: 0;
    -webkit-transform: scale3d(0.1, 0.1, 0.1) translate3d(0, 1000px, 0);
    -ms-transform: scale3d(0.1, 0.1, 0.1) translate3d(0, 1000px, 0);
    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, 1000px, 0);
    -webkit-animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }

  60% {
    opacity: 1;
    -webkit-transform: scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0);
    -ms-transform: scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0);
    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0);
    -webkit-animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);
  }
}

.zoomInUp {
  -webkit-animation-name: zoomInUp;
  animation-name: zoomInUp;
}

.fade-in {
  animation: fadeIn 0.25s;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes breathing {
  from {
    opacity: 0.75;
    transform: scale(0.8);
  }

  to {
    opacity: 0;
    transform: scale(var(--size, 2));
  }
}

@keyframes scale-up-center {
  0% {
    transform: scale(0.5);
  }

  100% {
    transform: scale(1);
  }
}

@keyframes shaken {

  0%,
  100% {
    transform: translateX(0);
  }

  10%,
  30%,
  50%,
  70%,
  90% {
    transform: translateX(-10px);
  }

  20%,
  40%,
  60%,
  80% {
    transform: translateX(10px);
  }
}

.ani-shaken {
  animation: shaken 0.5s 5;
}

/* 缩小并覆盖 */
.scale-down-and-cover-enter-active,
.scale-down-and-cover-leave-active {
  transition: 0.25s cubic-bezier(0.785, 0.135, 0.15, 0.86);
}

.scale-down-and-cover-enter-from {
  position: absolute;
  //opacity: 0;
  transform: translateY(100%);
}

.scale-down-and-cover-enter-to {
  position: absolute;
  //opacity: 1;
  transform: translateY(0);
}

.scale-down-and-cover-leave-from {
  //opacity: 1;
  transform: translateY(-100%);
}

.scale-down-and-cover-leave-to {
  z-index: -1;

  //opacity: 0;
  transform: translateY(0);
}

/* 放大并覆盖 */
.scale-up-and-cover-enter-active,
.scale-up-and-cover-leave-active {
  transition: 0.25s cubic-bezier(0.785, 0.135, 0.15, 0.86);
}

.scale-up-and-cover-enter-from {
  margin-top: -100%;

  opacity: 0;
  filter: blur(10px);
}

.scale-up-and-cover-enter-to {
  margin-top: 0;

  opacity: 1;
  filter: blur(0);
}

.scale-up-and-cover-leave-from {
  z-index: -1;

  top: 0;

  opacity: 1;
}

.scale-up-and-cover-leave-to {
  margin-top: 100%;

  opacity: 0;
  filter: blur(10px);
}

/* 淡入淡出 */
.fade-enter-active,
.fade-leave-active {
  transition: opacity 0.5s;
}

.fade-enter,
.fade-leave-to {
  opacity: 0;
}

::view-transition-old(root),
::view-transition-new(root) {
  animation: none;
  mix-blend-mode: normal;
}

/* 进入dark模式和退出dark模式时，两个图像的位置顺序正好相反 */
.dark::view-transition-old(root) {
  z-index: 9999999;
}

.dark::view-transition-new(root) {
  z-index: 10000000;
}

::view-transition-old(root) {
  z-index: 1000;
}

::view-transition-new(root) {
  z-index: 99999;
}

.Touch-Dialog {
  z-index: 1000;
  position: absolute;
  padding: 1rem 2rem;

  left: 50%;
  top: 50%;

  border-radius: 8px;
  transform: translate(-50%, -50%);
  background-color: var(--el-fill-color);
}