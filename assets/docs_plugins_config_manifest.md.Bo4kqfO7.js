import{_ as t,I as p,c as o,o as r,av as l,j as i,a,J as e}from"./chunks/framework.BeXG8Lo6.js";const q=JSON.parse('{"title":"Manifest","description":"","frontmatter":{},"headers":[],"relativePath":"docs/plugins/config/manifest.md","filePath":"docs/plugins/config/manifest.md","lastUpdated":1753760964000}'),h={name:"docs/plugins/config/manifest.md"},d={id:"icon",tabindex:"-1"},u={id:"type",tabindex:"-1"},k={id:"value",tabindex:"-1"},c={id:"plugin",tabindex:"-1"},g={id:"dev",tabindex:"-1"};function b(E,s,y,m,f,F){const n=p("Badge");return r(),o("div",null,[s[19]||(s[19]=l(`<h1 id="manifest" tabindex="-1">Manifest <a class="header-anchor" href="#manifest" aria-label="Permalink to “Manifest”">​</a></h1><blockquote><p><code>manifest.json</code> is our newly design that not need you manually manage configuration.</p></blockquote><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to “Introduction”">​</a></h2><p>In the latest <code>2.0.0+</code>, we abandoned <code>init.json</code> but it still support in loading plugin.</p><p>We take measures on <code>manifest.json</code>, a configuration which you don&#39;t need to manage it manually! Just take config into <code>package.json</code>, the manifest and whole pack will be automatically packed when you build!</p><h2 id="get-started" tabindex="-1">Get Started <a class="header-anchor" href="#get-started" aria-label="Permalink to “Get Started”">​</a></h2><p>To start it, install our official unplugin in your project. The <code>ni</code> is recommended to install any libs.</p><p>Here is a quick avenue to see the latest version of it: <a href="https://www.npmjs.com/package/unplugin-starter" target="_blank" rel="noreferrer"><img src="https://img.shields.io/npm/v/@talex-touch/unplugin-export-plugin?color=a1b858&amp;label=" alt="NPM version"></a></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ni</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @talex-touch/unplugin-export-plugin</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="vite" tabindex="-1">Vite <a class="header-anchor" href="#vite" aria-label="Permalink to “Vite”">​</a></h3><p>In your <code>vite.config.js</code> or <code>vite.config.ts</code></p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TouchPluginExport </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@talex-touch/unplugin-export-plugin/vite&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  plugins: [</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    TouchPluginExport</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="other-build-tool" tabindex="-1">Other build tool <a class="header-anchor" href="#other-build-tool" aria-label="Permalink to “Other build tool”">​</a></h3><p>You can refer to <a href="https://github.com/unjs/unplugin" target="_blank" rel="noreferrer">this</a> to know more about it.</p><h2 id="appendix" tabindex="-1">Appendix <a class="header-anchor" href="#appendix" aria-label="Permalink to “Appendix”">​</a></h2><p>In the newly manifest file, we abandoned many fields.</p><p>And here is a completely demo.</p><p>Just remove <code>name</code> <code>version</code> <code>description</code> (They will auto imported from <strong>package.json</strong>)</p><p>Other fields are all moved to the <code>touch</code> filed in <strong>package.json</strong> (As usual)</p><div class="language-JSON line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JSON</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">package.json</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">  ...,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;talex-touch&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;icon&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;remix&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;value&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;github&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;plugin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;dev&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;enable&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;address&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://127.0.0.1:5174/&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>`,20)),i("h2",d,[s[0]||(s[0]=a("icon ",-1)),e(n,{type:"info",text:"OPTIONAL"}),s[1]||(s[1]=a()),e(n,{type:"warning",text:"Supposed"}),s[2]||(s[2]=a()),s[3]||(s[3]=i("a",{class:"header-anchor",href:"#icon","aria-label":"Permalink to “icon”"},"​",-1))]),s[20]||(s[20]=l('<p>Filed <code>icon</code> identifies the icon of a plugin, if it&#39;s empty, the default will be <code>TalexTouch</code> Logo, it will seriously affect the user&#39;s identification in the plug-in</p><h3 id="addon-you-can-use-class-as-key-see-unocss-icones" tabindex="-1">Addon: You can use <code>class</code> as key (See UnoCSS <a href="https://icones.js.org/" target="_blank" rel="noreferrer">icones</a>) <a class="header-anchor" href="#addon-you-can-use-class-as-key-see-unocss-icones" aria-label="Permalink to “Addon: You can use class as key (See UnoCSS icones)”">​</a></h3><br><br><blockquote><p>Here are 2 fields under icon filed.</p></blockquote>',5)),i("h3",u,[s[4]||(s[4]=a("type ",-1)),e(n,{type:"info",text:"OPTIONAL"}),s[5]||(s[5]=a()),s[6]||(s[6]=i("a",{class:"header-anchor",href:"#type","aria-label":"Permalink to “type”"},"​",-1))]),s[21]||(s[21]=i("p",null,[i("code",null,"Filed icon.type"),a(" identifies the icon type of a plugin-icon. You can use "),i("a",{href:"https://remixicon.com/",target:"_blank",rel:"noreferrer"},"RemixIcon"),a(" value if you set it to "),i("code",null,"remix")],-1)),s[22]||(s[22]=i("blockquote",null,[i("p",null,[a("Other contents will be searched from "),i("strong",null,"plugin-root-folder/value"),a(" , try to not more than 1 MB.")])],-1)),s[23]||(s[23]=i("p",null,"It is important to note that you do not need to fill out the prefix remix and style style, such as line, although style can fill in the category, such as remix - making - and only fill in making the line!",-1)),i("h2",k,[s[7]||(s[7]=a("value ",-1)),e(n,{type:"info",text:"OPTIONAL"}),s[8]||(s[8]=a()),e(n,{type:"warning",text:"Supposed"}),s[9]||(s[9]=a()),s[10]||(s[10]=i("a",{class:"header-anchor",href:"#value","aria-label":"Permalink to “value”"},"​",-1))]),s[24]||(s[24]=i("p",null,[a("Filed "),i("code",null,"icon.value"),a(" identifies the value of a plugin-icon. If it's empty, the default will be "),i("code",null,"TalexTouch"),a(" Logo.")],-1)),i("h2",c,[s[11]||(s[11]=a("plugin ",-1)),e(n,{type:"info",text:"OPTIONAL"}),s[12]||(s[12]=a()),s[13]||(s[13]=i("a",{class:"header-anchor",href:"#plugin","aria-label":"Permalink to “plugin”"},"​",-1))]),s[25]||(s[25]=i("blockquote",null,[i("p",null,"Here are many things under plugin filed.")],-1)),i("h3",g,[s[14]||(s[14]=a("dev ",-1)),e(n,{type:"danger",text:"Beta"}),s[15]||(s[15]=a()),s[16]||(s[16]=i("a",{class:"header-anchor",href:"#dev","aria-label":"Permalink to “dev”"},"​",-1))]),s[26]||(s[26]=i("p",null,[a("Filed "),i("code",null,"dev"),a(" identifies the dev-mode of a plugin, you can use "),i("code",null,"enable"),a(" to enable or disable.")],-1)),i("ul",null,[s[18]||(s[18]=i("li",null,"address: Where to load page",-1)),i("li",null,[s[17]||(s[17]=a("source: Use confusion when exporting. ",-1)),e(n,{type:"danger",text:"Beta"})])]),s[27]||(s[27]=l(`<h3 id="build" tabindex="-1">build <a class="header-anchor" href="#build" aria-label="Permalink to “build”">​</a></h3><blockquote><p>To export your plugin, you must have a build field.</p></blockquote><p>The build field is made up with 2 vital fields with other optional fields.</p><p>Here is a completely demo:</p><div class="language-JSON line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JSON</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;files&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;init.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;index.html&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;secret&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;pos&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;TalexTouch&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;addon&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;windows&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;darwin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;linux&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;verify&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;enable&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;online&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;always&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;update&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;auto&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;downgrade&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>As you see above, the build field is consists of 4 fields.</p><h4 id="files-necessary" tabindex="-1">files (Necessary) <a class="header-anchor" href="#files-necessary" aria-label="Permalink to “files (Necessary)”">​</a></h4><p><code>Field files</code> describes the files what you want to export! Attention, the <code>OFFICIAL</code> upload limit is 512MB and single plugin size limit is <code>2048MB</code></p><p>The export root path is your plugin root path.</p><h4 id="secret-necessary" tabindex="-1">secret (Necessary) <a class="header-anchor" href="#secret-necessary" aria-label="Permalink to “secret (Necessary)”">​</a></h4><p><code>Field secret</code> describes the secret that you want to choose.</p><p>If you want to upload your plugin to <code>OFFICIAL</code> you must choose pos <strong>TalexTouch</strong></p><p>Otherwise you could choose your own secret url! (Up to your deploy method)</p><p><code>Field addon</code> describes what platforms you want to release.</p><p>The platform that not match could not load it.</p><h4 id="verify-optional" tabindex="-1">verify (Optional) <a class="header-anchor" href="#verify-optional" aria-label="Permalink to “verify (Optional)”">​</a></h4><p><code>Field verify</code> describes the plugin whether should be verified.</p><p>It means if you turn on it, the plugin must be connected to Internet and be validated to use. (It&#39;s a necessary switch if you want user use by payment)</p><p><code>Field online</code> describes the validation method</p><p>For <strong>custom</strong>: Up to developer to choose (See docs) For <strong>always</strong>: Plugin need to validate on each startup For <strong>once</strong>: Plugin need to validate on computer startup</p><h4 id="version-optional" tabindex="-1">version (Optional) <a class="header-anchor" href="#version-optional" aria-label="Permalink to “version (Optional)”">​</a></h4><p><code>Field update</code> describes the plugin update method.</p><p>For <strong>auto</strong>: When new version released, the plugin will be automatically update when startup. For <strong>ask</strong>: Ask user whether to update. For <strong>readable</strong>: Deprecated the plugin, user could only use and no later version.</p><p><code>Field downgrade</code> describes the user could downgrade their plugin to this version.</p><p>For more about it, you can see our source-code on right corder (GitHub)</p>`,25))])}const v=t(h,[["render",b]]);export{q as __pageData,v as default};
