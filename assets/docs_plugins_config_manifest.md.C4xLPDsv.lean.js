import{_ as t,I as p,c as r,o,av as l,j as i,a,J as e}from"./chunks/framework.C8SPBEPR.js";const q=JSON.parse('{"title":"Manifest","description":"","frontmatter":{},"headers":[],"relativePath":"docs/plugins/config/manifest.md","filePath":"docs/plugins/config/manifest.md","lastUpdated":1755005206000}'),h={name:"docs/plugins/config/manifest.md"},d={id:"icon",tabindex:"-1"},u={id:"type",tabindex:"-1"},k={id:"value",tabindex:"-1"},c={id:"plugin",tabindex:"-1"},g={id:"dev",tabindex:"-1"};function b(E,s,y,m,f,F){const n=p("Badge");return o(),r("div",null,[s[19]||(s[19]=l("",20)),i("h2",d,[s[0]||(s[0]=a("icon ",-1)),e(n,{type:"info",text:"OPTIONAL"}),s[1]||(s[1]=a()),e(n,{type:"warning",text:"Supposed"}),s[2]||(s[2]=a()),s[3]||(s[3]=i("a",{class:"header-anchor",href:"#icon","aria-label":"Permalink to “icon”"},"​",-1))]),s[20]||(s[20]=l("",5)),i("h3",u,[s[4]||(s[4]=a("type ",-1)),e(n,{type:"info",text:"OPTIONAL"}),s[5]||(s[5]=a()),s[6]||(s[6]=i("a",{class:"header-anchor",href:"#type","aria-label":"Permalink to “type”"},"​",-1))]),s[21]||(s[21]=i("p",null,[i("code",null,"Filed icon.type"),a(" identifies the icon type of a plugin-icon. You can use "),i("a",{href:"https://remixicon.com/",target:"_blank",rel:"noreferrer"},"RemixIcon"),a(" value if you set it to "),i("code",null,"remix")],-1)),s[22]||(s[22]=i("blockquote",null,[i("p",null,[a("Other contents will be searched from "),i("strong",null,"plugin-root-folder/value"),a(" , try to not more than 1 MB.")])],-1)),s[23]||(s[23]=i("p",null,"It is important to note that you do not need to fill out the prefix remix and style style, such as line, although style can fill in the category, such as remix - making - and only fill in making the line!",-1)),i("h2",k,[s[7]||(s[7]=a("value ",-1)),e(n,{type:"info",text:"OPTIONAL"}),s[8]||(s[8]=a()),e(n,{type:"warning",text:"Supposed"}),s[9]||(s[9]=a()),s[10]||(s[10]=i("a",{class:"header-anchor",href:"#value","aria-label":"Permalink to “value”"},"​",-1))]),s[24]||(s[24]=i("p",null,[a("Filed "),i("code",null,"icon.value"),a(" identifies the value of a plugin-icon. If it's empty, the default will be "),i("code",null,"Tuff"),a(" Logo.")],-1)),i("h2",c,[s[11]||(s[11]=a("plugin ",-1)),e(n,{type:"info",text:"OPTIONAL"}),s[12]||(s[12]=a()),s[13]||(s[13]=i("a",{class:"header-anchor",href:"#plugin","aria-label":"Permalink to “plugin”"},"​",-1))]),s[25]||(s[25]=i("blockquote",null,[i("p",null,"Here are many things under plugin filed.")],-1)),i("h3",g,[s[14]||(s[14]=a("dev ",-1)),e(n,{type:"danger",text:"Beta"}),s[15]||(s[15]=a()),s[16]||(s[16]=i("a",{class:"header-anchor",href:"#dev","aria-label":"Permalink to “dev”"},"​",-1))]),s[26]||(s[26]=i("p",null,[a("Filed "),i("code",null,"dev"),a(" identifies the dev-mode of a plugin, you can use "),i("code",null,"enable"),a(" to enable or disable.")],-1)),i("ul",null,[s[18]||(s[18]=i("li",null,"address: Where to load page",-1)),i("li",null,[s[17]||(s[17]=a("source: Use confusion when exporting. ",-1)),e(n,{type:"danger",text:"Beta"})])]),s[27]||(s[27]=l("",25))])}const v=t(h,[["render",b]]);export{q as __pageData,v as default};
